// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Synthetics JavaScript formatter accepts custom step organization 1`] = `
Array [
  "const { journey, step, expect } = require('@elastic/synthetics');

journey('Recorded journey', async ({ page, context }) => {",
  "  step('Open new page', async () => {",
  "    await page.goto('https://vigneshh.in/');",
  "  });",
  "  step('Assert text=Babel Minify isVisible', async () => {",
  "    expect(await page.isVisible('text=Babel Minify')).toBeTruthy();",
  "    expect(await page.isEditable('text=Babel Minify')).toBeTruthy();",
  "  });",
  "  step('Assert text=Babel Minify textContent', async () => {",
  "    expect(await page.textContent('text=Babel Minify')).toMatch('Babel');",
  "    const [page1] = await Promise.all([
      page.waitForEvent('popup'),
      page.click('text=Babel Minify')
    ]);",
  "    await Promise.all([
      page1.waitForNavigation(/*{ url: 'https://github.com/babel/minify' }*/),
      page1.click('a:has-text(\\"smoke\\")')
    ]);",
  "  });",
  "  step('Close page', async () => {",
  "    await page1.close();",
  "  });",
  "});",
]
`;

exports[`Synthetics JavaScript formatter allows overriding default step structure 1`] = `
"step('Open new page', async () => {
  await page.goto('https://vigneshh.in/');
  expect(await page.isVisible('text=Babel Minify')).toBeTruthy();
  expect(await page.isEditable('text=Babel Minify')).toBeTruthy();
  expect(await page.textContent('text=Babel Minify')).toMatch('Babel');
  const [page1] = await Promise.all([
    page.waitForEvent('popup'),
    page.click('text=Babel Minify')
  ]);
  await Promise.all([
    page1.waitForNavigation(/*{ url: 'https://github.com/babel/minify' }*/),
    page1.click('a:has-text(\\"smoke\\")')
  ]);
  await page1.close();
});"
`;

exports[`Synthetics JavaScript formatter allows overriding step structure for suites 1`] = `
"const { journey, step, expect } = require('@elastic/synthetics');

  journey('Recorded journey', async ({ page, context }) => {
    step('Open new page', async () => {
      await page.goto('https://vigneshh.in/');
      expect(await page.isVisible('text=Babel Minify')).toBeTruthy();
      expect(await page.isEditable('text=Babel Minify')).toBeTruthy();
      expect(await page.textContent('text=Babel Minify')).toMatch('Babel');
      const [page1] = await Promise.all([
        page.waitForEvent('popup'),
        page.click('text=Babel Minify')
      ]);
      await Promise.all([
        page1.waitForNavigation(/*{ url: 'https://github.com/babel/minify' }*/),
        page1.click('a:has-text(\\"smoke\\")')
      ]);
      await page1.close();
    });
  });"
`;

exports[`Synthetics JavaScript formatter inline journeys 1`] = `
"step('Go to https://vigneshh.in/', async () => {
  await page.goto('https://vigneshh.in/');
  expect(await page.isVisible('text=Babel Minify')).toBeTruthy();
  expect(await page.isEditable('text=Babel Minify')).toBeTruthy();
  expect(await page.textContent('text=Babel Minify')).toMatch('Babel');
});
step('Click text=Babel Minify', async () => {
  const [page1] = await Promise.all([
    page.waitForEvent('popup'),
    page.click('text=Babel Minify')
  ]);
  await Promise.all([
    page1.waitForNavigation(/*{ url: 'https://github.com/babel/minify' }*/),
    page1.click('a:has-text(\\"smoke\\")')
  ]);
  await page1.close();
});"
`;

exports[`Synthetics JavaScript formatter suite journeys 1`] = `
"const { journey, step, expect } = require('@elastic/synthetics');

journey('Recorded journey', async ({ page, context }) => {
  step('Go to https://vigneshh.in/', async () => {
    await page.goto('https://vigneshh.in/');
    expect(await page.isVisible('text=Babel Minify')).toBeTruthy();
    expect(await page.isEditable('text=Babel Minify')).toBeTruthy();
    expect(await page.textContent('text=Babel Minify')).toMatch('Babel');
  });
  step('Click text=Babel Minify', async () => {
    const [page1] = await Promise.all([
      page.waitForEvent('popup'),
      page.click('text=Babel Minify')
    ]);
    await Promise.all([
      page1.waitForNavigation(/*{ url: 'https://github.com/babel/minify' }*/),
      page1.click('a:has-text(\\"smoke\\")')
    ]);
    await page1.close();
  });
});"
`;

exports[`Synthetics JavaScript formatter use modified title if available 1`] = `
"step('Visiting profile', async () => {
  await page.goto('https://vigneshh.in/');
});"
`;

exports[`Synthetics JavaScript formatter uses custom step names 1`] = `
Array [
  "step('test-name', async () => {",
  "  await page.goto('https://vigneshh.in/');",
  "  expect(await page.isVisible('text=Babel Minify')).toBeTruthy();",
  "  expect(await page.isEditable('text=Babel Minify')).toBeTruthy();",
  "});",
]
`;
