version: '3.7'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      retries: 10
      interval: 20s
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 127.0.0.1:9200:9200
    networks:
      - elastic
  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    depends_on:
      - elasticsearch
      - synthetic
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      retries: 10
      start_period: 30s
    ports:
      - 127.0.0.1:5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - elastic
  synthetic:
    image: docker.elastic.co/experimental/synthetics:${STACK_VERSION}-synthetics
    container_name: synthetics
    depends_on:
      - elasticsearch
    volumes:
      - ../../examples/docker/heartbeat.docker.yml:/usr/share/heartbeat/heartbeat.yml:ro
      - ../../:/opt/elastic-synthetics:rw
    security_opt:
      - seccomp=../../examples/docker/seccomp_profile.json
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    command:
      -E output.elasticsearch.hosts=["elasticsearch:9200"] --strict.perms=false --environment container
    networks:
      - elastic

networks:
  elastic:
    driver: bridge
